# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: habit-api # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs8.10
  profile: serverless
  stage: dev
  region: us-east-1
  environment:
    NODE_ENV: ${env:NODE_ENV}
# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:UpdateTable
      Resource: 
        - "arn:aws:dynamodb:us-east-1:229409410964:table/habit-records"
        - "arn:aws:dynamodb:us-east-1:229409410964:table/habit-records/index/*"
        - "arn:aws:dynamodb:us-east-1:229409410964:table/user-records"
        - "arn:aws:dynamodb:us-east-1:229409410964:table/user-records/index/*"


# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  grahpql:
    handler: app.handler
    events:
      - http:
          path: graphql
          method: post
          cors: true
  playground:
    handler: app.handler
    events:
       - http:
          path: playground
          method: get
  pushNotifications:
    handler: lib/pushNotifications.handler
    events:
      - schedule:
          name: push-notification-handler
          description: 'Sends push notification reminding user to train.'
          rate: rate(10 minutes)
      - http:
          path: notification
          method: get

plugins:
  - serverless-offline

# you can add CloudFormation resource templates here
resources:
 Resources:
  HabitDynamoDBTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        -
          AttributeName: habit_id
          AttributeType: S
        -
          AttributeName: created_at
          AttributeType: S
        -
          AttributeName: user_id
          AttributeType: S

      KeySchema:
        -
          AttributeName: habit_id
          KeyType: HASH
        -
          AttributeName: created_at
          KeyType: RANGE

      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      
      GlobalSecondaryIndexes:
        -
          IndexName: UserIndex
          KeySchema:
            -
              AttributeName: user_id
              KeyType: HASH
            -
              AttributeName: created_at
              KeyType: RANGE

          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
           ReadCapacityUnits: 5
           WriteCapacityUnits: 5

      TableName: habit-records

  UserDynamoDBTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        -
          AttributeName: user_id
          AttributeType: S
        -
          AttributeName: created_at
          AttributeType: S
        -
          AttributeName: email
          AttributeType: S
        -
          AttributeName: push_token
          AttributeType: S
        -
          AttributeName: reminder
          AttributeType: S


      KeySchema:
        -
          AttributeName: user_id
          KeyType: HASH
        -
          AttributeName: created_at
          KeyType: RANGE

      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      
      GlobalSecondaryIndexes:
        -
          IndexName: EmailIndex
          KeySchema:
            -
              AttributeName: email
              KeyType: HASH
            -
              AttributeName: created_at
              KeyType: RANGE

          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
           ReadCapacityUnits: 5
           WriteCapacityUnits: 5

        -
          IndexName: PushNotificationIndex
          KeySchema:
            -
              AttributeName: push_token
              KeyType: HASH
            -
              AttributeName: reminder
              KeyType: RANGE      
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
           ReadCapacityUnits: 5
           WriteCapacityUnits: 5
      
      TableName: user-records
